/*Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:

Each row must contain the digits 1-9 without repetition.
Each column must contain the digits 1-9 without repetition.
Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.
Note:

A Sudoku board (partially filled) could be valid but is not necessarily solvable.
Only the filled cells need to be validated according to the mentioned rules.*/

public bool IsValidSudoku(char[][] board) {
         String[] rows = new String[9];
            String[] cols = new String[9];
            String[] squares = new String[9];
            int square_index = 0;
            for (int i = 0; i < 9; i++)
            {
                for (int j = 0; j < 9; j++)
                {
                    if (board[i][j] != '.')
                    {
                        if (rows[i] == null) rows[i] = "";
                        if (!rows[i].Contains(board[i][j]))
                            rows[i] += board[i][j];
                        else return false;
                        if (cols[j] == null) cols[j] = "";
                        if (!cols[j].Contains(board[i][j]))
                            cols[j] += board[i][j];
                        else return false;
                        square_index = 3 * (i / 3) + j / 3;
                        if (squares[square_index] == null) squares[square_index] = "";
                        if (!squares[square_index].Contains(board[i][j]))
                            squares[square_index] += board[i][j];
                        else return false;
                    }
                }
            }
            return true;
    }
